package miphi.project.interfaces;

import miphi.project.model.User;

import java.util.UUID;

/**
 * Интерфейс сервиса для работы с пользователями.
 * Осуществляет регистрацию пользователей, а также аутентификацию и получение информации о пользователях.
 */
public interface IUserService {

    /**
     * Регистрация нового пользователя.
     * Если пользователь с таким именем уже существует, регистрация не будет выполнена.
     * Возвращает {@code true}, если регистрация прошла успешно, и {@code false}, если имя пользователя уже занято.
     *
     * @param username Имя пользователя для регистрации.
     * @param password Пароль пользователя, который будет хеширован перед сохранением.
     * @return {@code true} - если пользователь успешно зарегистрирован, {@code false} - если имя пользователя уже существует.
     */
    boolean registerUser(String username, String password);

    /**
     * Выполняет аутентификацию пользователя.
     * Проверяет соответствие имени пользователя и пароля в базе данных.
     * Если авторизация успешна, возвращается уникальный идентификатор пользователя (UUID).
     * В случае ошибки авторизации возвращается {@code null}.
     *
     * @param username Имя пользователя для входа.
     * @param password Пароль пользователя для входа.
     * @return UUID пользователя, если авторизация успешна, {@code null} - если имя пользователя или пароль неверны.
     */
    UUID loginUser(String username, String password);

    /**
     * Получает пользователя по уникальному идентификатору (UUID).
     * Возвращает объект {@code User} или {@code null}, если пользователя с таким идентификатором не существует.
     *
     * @param userUuid Уникальный идентификатор пользователя.
     * @return Пользователь с заданным UUID, или {@code null}, если пользователь не найден.
     */
    User getUser(UUID userUuid);
}
